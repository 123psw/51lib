C51 COMPILER V9.57.0.0   USER                                                              09/20/2020 12:04:25 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE USER
OBJECT MODULE PLACED IN .\Objects\user.obj
COMPILER INVOKED BY: D:\KeilC51\C51\BIN\C51.EXE ..\USER\user.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\FsBSP\inc;..\USER) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\user.lst) TABS(2) OBJECT(.\Objects\user.obj)

line level    source

   1          #include "user.h"
   2          
   3          void init_IO()
   4          {
   5   1        //关闭蜂鸣器
   6   1        P2 = P2&0x1f|0xa0; //打开Y5
   7   1        P0 = 0x00; 
   8   1        P2 &= 0x1f; //释放片选
   9   1        //关闭LED
  10   1        P2 = P2&0x1f|0x80; //打开Y4
  11   1        P0 = 0xff;
  12   1        P2 &= 0x1f; //释放片选
  13   1      }
  14          
  15          void writetime(u8 *ds)
  16          {
  17   1        u8 i;     
  18   1        u8 add=0x80; //DS1302 秒时寄存器（写）地址
  19   1        write(0x8e,0x00); //写保护关 
  20   1        for(i=0;i<3;i++)
  21   1        {
  22   2          write(add,ds[i]);   
  23   2          add=add+2;
  24   2        }
  25   1        write(0x8e,0x80);
  26   1      }
  27          
  28          void readtime(u8 *time)
  29          {
  30   1        u8 i;
  31   1        u8 add=0x81; //DS1302 秒时寄存器（读）地址
  32   1        write(0x8e,0x00); 
  33   1        for(i=0;i<3;i++)
  34   1        {
  35   2          time[i]=read(add);
  36   2          add=add+2;
  37   2        }
  38   1        write(0x8e,0x80); 
  39   1      }
  40          
  41          void BCD_conversion(u8 *time,u8 *dbuf)
  42          {
  43   1         u8 i ,j=2;
  44   1         time[0] &= 0x7f; //秒
  45   1         time[1] &= 0x7f; //分
  46   1         time[2] &= 0x3f; //时
  47   1         for(i = 0 ; i < 6 ; i++ )
  48   1         {
  49   2         dbuf[i++] = time[j]/10;
  50   2         dbuf[i] = time[j--]%10;
  51   2         }
  52   1      }
  53          
  54          void ExecClock(u8 KeyNum ,ClockStatus *clockState , TimeStatus *blink)
C51 COMPILER V9.57.0.0   USER                                                              09/20/2020 12:04:25 PAGE 2   

  55          {
  56   1        switch(*clockState)
  57   1        {
  58   2          case ShowTime:
  59   2           if(KeyNum == 1)  //按下S7进入校时状态
  60   2           {
  61   3             *clockState = ChangeClockHour; //进入校时小时状态
  62   3             *blink = SaveTime; //  对当前时间进行复制
  63   3           }
  64   2          break;
  65   2          case ChangeClockHour: 
  66   2               if(KeyNum == 1)  //按下S7,回到ShowTime 状态
  67   2           {
  68   3             *clockState = ShowTime;  
  69   3                 *blink = ModifyTheTime; //将修改后时间写入DS1302           
  70   3           }        
  71   2           if(KeyNum == 2)  //按下S6进入分时闪烁状态
  72   2           {
  73   3             *clockState = ChangeClockMinute;  
  74   3             *blink = FlashMin; //  分时闪烁标志
  75   3           }    
  76   2               if(KeyNum == 3)  //按下S5小时加1
  77   2           {
  78   3             *clockState = ChangeClockHour; 
  79   3             *blink = ChangeHour; //小时加1标志
  80   3           }  
  81   2               if(KeyNum == 4)  //按下S4，不修改time回到showtime
  82   2           {
  83   3             *clockState = ShowTime; 
  84   3             *blink = UnmodifiedTime; //回到进入校时状态下的时间
  85   3           }    
  86   2           break;
  87   2          case ChangeClockMinute:
  88   2           if(KeyNum == 1)  
  89   2           {
  90   3             *clockState = ShowTime;
  91   3             *blink = ModifyTheTime;  
  92   3             }        
  93   2           if(KeyNum == 2) //进入秒时状态
  94   2           {
  95   3             *clockState = ChangeClockSecond;
  96   3             *blink = FlashSec; //秒时闪烁状态标志  
  97   3           }
  98   2           if(KeyNum == 3)  //分时加1
  99   2           {
 100   3             *clockState = ChangeClockMinute; 
 101   3                 *blink = ChangeMin;            
 102   3           }  
 103   2           if(KeyNum == 4)  
 104   2           {
 105   3             *clockState = ShowTime;
 106   3                 *blink = UnmodifiedTime;               
 107   3           }        
 108   2          break;
 109   2            case ChangeClockSecond:
 110   2           if(KeyNum == 1)  
 111   2           {
 112   3             *clockState = ShowTime;  
 113   3             *blink = ModifyTheTime;  
 114   3           }        
 115   2           if(KeyNum == 2)//进入小时状态
 116   2           {
C51 COMPILER V9.57.0.0   USER                                                              09/20/2020 12:04:25 PAGE 3   

 117   3             *clockState = ChangeClockHour;
 118   3             *blink = FlashHour;
 119   3           }  
 120   2               if(KeyNum == 3)  //秒时加1
 121   2           {
 122   3             *clockState =ChangeClockSecond; 
 123   3                 *blink = ChangeSec;  //秒时加1标志        
 124   3           }  
 125   2               if(KeyNum == 4)  
 126   2           {
 127   3             *clockState = ShowTime; 
 128   3                 *blink = UnmodifiedTime;               
 129   3           }        
 130   2          break;          
 131   2          default:  
 132   2           {
 133   3              *clockState = ShowTime;
 134   3            *blink = WalkTime; 
 135   3           }
 136   2          break;
 137   2        }
 138   1      }
 139          
 140          void TimeChange(u8 *time,TimeStatus *blink)
 141          {
 142   1        switch(*blink)
 143   1        {
 144   2          case ChangeHour: //小时加1
 145   2          if(++time[2]>=24)time[2]=0;break; 
 146   2          case ChangeMin: //分时加1
 147   2          if(++time[1]>=60)time[1]=0;break; 
 148   2          case ChangeSec: //秒时加1
 149   2          if(++time[0]>=60)time[0]=0;break; 
 150   2          default: break;
 151   2        }
 152   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    755    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
